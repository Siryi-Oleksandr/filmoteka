{"mappings":"AAAO,SAASA,EAAsBC,GACpC,OAAOA,EACJC,KAAIC,IACH,MAAMC,OAAEA,EAAMC,GAAEA,EAAEC,OAAEA,EAAMC,KAAEA,EAAIC,OAAEA,EAAMC,KAAEA,GAASN,EAC7CO,EA4BZ,SAAwBN,GACtB,OAAIA,EAAOO,QAAU,EACZP,EAAOQ,KAAK,MAEZ,GAAGR,EAAO,OAAOA,EAAO,WAEnC,CAlC2BS,CAAeT,GAEpC,MAAO,uJAIQE,0BACAC,kKAKgBA,wFAEMG,uDACDD,gLAIED,yEAIhC,IAEPI,KAAK,GACV,CCmFA,MAMME,EAAO,CACXC,WAAYC,SAASC,cAAc,mBAG/BC,EAAa,8BACbC,EAAgB,QAKtBC,iBACE,MAAMC,QAAuBC,MAC3B,4FAEIC,QAAeF,EAAeG,OAC9BC,QAAuBH,MAC3B,yGAEIlB,QAAeqB,EAAeD,OACpC,MAAO,CAACD,EAAQnB,EAClB,EAbAsB,GAAmBC,MAenB,SAA2BC,GACzB,MAAMC,QAAEA,GAAYD,EAAK,IACnBxB,OAAEA,GAAWwB,EAAK,IAM1B,SAAyBL,GACvB,MAAMO,EAAoB9B,EAAsBuB,GAChDT,EAAKC,WAAWgB,UAAYD,CAC9B,CANEE,CAQF,SAA0BH,EAASI,GACjC,OAAOJ,EAAQ3B,KACb,EAACgC,YAAEA,EAAWC,UAAEA,EAASC,aAAEA,EAAYC,MAAEA,EAAKhC,GAAEA,EAAEiC,aAAEA,MAClD,MAAMhC,EAASY,EAAaC,EAAgBe,EACtC9B,EAcZ,SAA6BmC,EAAUN,GACrC,MAAMO,EAAS,GAUf,OARAD,EAASE,MAAKC,IACZT,EAAUU,SAAQC,IACZA,EAAMvC,KAAOqC,GACfF,EAAOK,KAAKD,EAAMrC,KAAI,GAE1B,IAGKiC,CACT,CA1BqBM,CAAoBX,EAAWF,GAE9C,MAAO,CACL3B,OAAQA,EACRF,OAAQA,EACRI,OAAQ4B,EAAaW,QAAQ,GAC7BxC,KAAM8B,EACNhC,GAAIA,EACJI,KAAMuC,OAAOC,SAASX,GACxB,GAGN,CAzBwBY,CAAiBrB,EAASzB,GAElD,IArB2C+C,OA4D3C,WAEA","sources":["src/js/card-markup.js","src/index.js"],"sourcesContent":["export function createMarkupFilmsList(moviesData) {\n  return moviesData\n    .map(movie => {\n      const { genres, id, imgUrl, name, rating, year } = movie;\n      const genresToShow = trimGenresList(genres);\n\n      return `<li class=\"films__item\">\n        <a href=\"\" class=\"films__link\">\n          <div class=\"films__img-wrapper\">\n            <img\n              src=\"${imgUrl}\"\n              alt=\"${name}\"\n              class=\"films__img\" loading=\"lazy\"\n            />\n          </div>\n          <div class=\"films__info\">\n            <p class=\"films__name\">${name}</p>\n            <p class=\"films__desk\">\n              <span class=\"films__genre\">${genresToShow}</span> |\n              <span class=\"films__year\">${year}</span>\n            </p>\n            <p class=\"films__desk\">\n              <span class=\"films__rating--text\"> Rating: </span>\n              <span class=\"films__rating\">${rating}</span>\n            </p>\n          </div>\n        </a>\n      </li>`;\n    })\n    .join('');\n}\n\nfunction trimGenresList(genres) {\n  if (genres.length <= 3) {\n    return genres.join(', ');\n  } else {\n    return `${genres[0]}, ${genres[1]}, Other`;\n  }\n}\n","/* import { createMarkupFilmsList } from './js/card-markup';\n\nconst API_KEY = 'd03712107dcdd723f1173c5ee2c0d8c1';\n\n//  https://api.themoviedb.org/3/trending/movie/day?api_key=d03712107dcdd723f1173c5ee2c0d8c1\n// https://api.themoviedb.org/3/genre/movie/list?api_key=d03712107dcdd723f1173c5ee2c0d8c1&language=en-US\n//  https://image.tmdb.org/t/p/w500/kqjL17yufvn9OVLyXYpvtyrFfak.jpg //poster\n\nconst refs = {\n  moviesList: document.querySelector('.js-films-list'),\n};\n\nconst baseImgUrl = `https://image.tmdb.org/t/p/`;\nconst imgPosterSize = `w500`;\n// ! main fetch\nfetchTrendMovies().then(handleTrendMovies).catch(handleError);\n\n// ! Set functions\nasync function fetchTrendMovies() {\n  const response = await fetch(\n    'https://api.themoviedb.org/3/trending/movie/day?api_key=d03712107dcdd723f1173c5ee2c0d8c1'\n  );\n  const movies = await response.json();\n  return movies;\n}\n\nasync function getGenresList() {\n  const response = await fetch(\n    'https://api.themoviedb.org/3/genre/movie/list?api_key=d03712107dcdd723f1173c5ee2c0d8c1&language=en-US'\n  );\n  const genres = await response.json();\n  return genres;\n}\n\n// getGenresList().then(handleGenresList);\n\nfunction handleGenresList(data) {\n  const { genres } = data;\n  console.log(genres);\n  return genres;\n}\n\nfunction handleTrendMovies(data) {\n  const { results } = data;\n  const necessaryData = getNecessaryData(results);\n  showTrendMovies(necessaryData);\n}\n\nfunction showTrendMovies(movies) {\n  const markupTrendMovies = createMarkupFilmsList(movies);\n  refs.moviesList.innerHTML = markupTrendMovies;\n}\n\nfunction getNecessaryData(results) {\n  return results.map(\n    ({ poster_path, genre_ids, vote_average, title, id, release_date }) => {\n      const imgUrl = baseImgUrl + imgPosterSize + poster_path;\n      const genres = filterActualyGenres(genre_ids);\n      console.log(genres);\n\n      return {\n        imgUrl: imgUrl,\n        genres: genres,\n        rating: vote_average.toFixed(2),\n        name: title,\n        id: id,\n        year: Number.parseInt(release_date),\n      };\n    }\n  );\n}\n\nasync function filterActualyGenres(genreIds) {\n  const result = [];\n  await getGenresList().then(({ genres }) => {\n    genreIds.find(genreId => {\n      genres.forEach(genre => {\n        if (genre.id === genreId) {\n          result.push(genre.name);\n        }\n      });\n    });\n  });\n  console.log(result);\n\n  return result;\n}\n// const encryptionGenres = [\n//   { id: 28, name: 'Action' },\n//   { id: 12, name: 'Adventure' },\n//   { id: 16, name: 'Animation' },\n//   { id: 35, name: 'Comedy' },\n//   { id: 80, name: 'Crime' },\n//   { id: 99, name: 'Documentary' },\n//   { id: 18, name: 'Drama' },\n//   { id: 10751, name: 'Family' },\n//   { id: 14, name: 'Fantasy' },\n//   { id: 36, name: 'History' },\n//   { id: 27, name: 'Horror' },\n//   { id: 10402, name: 'Music' },\n// ];\n// const genre_ids = [14, 6, 99];\n\n// filterActualyGenres();\n\nfunction handleError() {\n  err => console.log(err);\n} */\n\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\nimport { createMarkupFilmsList } from './js/card-markup';\n\nconst API_KEY = 'd03712107dcdd723f1173c5ee2c0d8c1';\n\n//  https://api.themoviedb.org/3/trending/movie/day?api_key=d03712107dcdd723f1173c5ee2c0d8c1\n// https://api.themoviedb.org/3/genre/movie/list?api_key=d03712107dcdd723f1173c5ee2c0d8c1&language=en-US\n//  https://image.tmdb.org/t/p/w500/kqjL17yufvn9OVLyXYpvtyrFfak.jpg //poster\n\nconst refs = {\n  moviesList: document.querySelector('.js-films-list'),\n};\n\nconst baseImgUrl = `https://image.tmdb.org/t/p/`;\nconst imgPosterSize = `w500`;\n// ! main fetch\nfetchTrendMovies().then(handleTrendMovies).catch(handleError);\n\n// ! Set functions\nasync function fetchTrendMovies() {\n  const responseMovies = await fetch(\n    'https://api.themoviedb.org/3/trending/movie/day?api_key=d03712107dcdd723f1173c5ee2c0d8c1'\n  );\n  const movies = await responseMovies.json();\n  const responseGenres = await fetch(\n    'https://api.themoviedb.org/3/genre/movie/list?api_key=d03712107dcdd723f1173c5ee2c0d8c1&language=en-US'\n  );\n  const genres = await responseGenres.json();\n  return [movies, genres];\n}\n\nfunction handleTrendMovies(data) {\n  const { results } = data[0];\n  const { genres } = data[1];\n\n  const necessaryData = getNecessaryData(results, genres);\n  showTrendMovies(necessaryData);\n}\n\nfunction showTrendMovies(movies) {\n  const markupTrendMovies = createMarkupFilmsList(movies);\n  refs.moviesList.innerHTML = markupTrendMovies;\n}\n\nfunction getNecessaryData(results, allGenres) {\n  return results.map(\n    ({ poster_path, genre_ids, vote_average, title, id, release_date }) => {\n      const imgUrl = baseImgUrl + imgPosterSize + poster_path;\n      const genres = filterActualyGenres(genre_ids, allGenres);\n\n      return {\n        imgUrl: imgUrl,\n        genres: genres,\n        rating: vote_average.toFixed(2),\n        name: title,\n        id: id,\n        year: Number.parseInt(release_date),\n      };\n    }\n  );\n}\n\nfunction filterActualyGenres(genreIds, allGenres) {\n  const result = [];\n\n  genreIds.find(genreId => {\n    allGenres.forEach(genre => {\n      if (genre.id === genreId) {\n        result.push(genre.name);\n      }\n    });\n  });\n\n  return result;\n}\n\nfunction handleError() {\n  err => console.log(err);\n}\n"],"names":["$02ed5811993e6f78$export$e3b8c69c5bd487ae","moviesData","map","movie","genres","id","imgUrl","name","rating","year","genresToShow","length","join","$02ed5811993e6f78$var$trimGenresList","$1f0dc3b9307be026$var$refs","moviesList","document","querySelector","$1f0dc3b9307be026$var$baseImgUrl","$1f0dc3b9307be026$var$imgPosterSize","async","responseMovies","fetch","movies","json","responseGenres","$1f0dc3b9307be026$var$fetchTrendMovies","then","data","results","markupTrendMovies","innerHTML","$1f0dc3b9307be026$var$showTrendMovies","allGenres","poster_path","genre_ids","vote_average","title","release_date","genreIds","result","find","genreId","forEach","genre","push","$1f0dc3b9307be026$var$filterActualyGenres","toFixed","Number","parseInt","$1f0dc3b9307be026$var$getNecessaryData","catch"],"version":3,"file":"index.193c7c77.js.map"}