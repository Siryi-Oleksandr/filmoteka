{"mappings":"YAAO,SAASA,EAAsBC,GACpC,OAAOA,EACJC,KAAIC,IACH,MAAMC,OAAEA,EAAMC,GAAEA,EAAEC,OAAEA,EAAMC,KAAEA,EAAIC,OAAEA,EAAMC,KAAEA,GAASN,EAC7CO,EA6BZ,SAAwBN,GACtB,OAAIA,EAAOO,QAAU,EACZP,EAAOQ,KAAK,MAEZ,GAAGR,EAAO,OAAOA,EAAO,WAEnC,CAnC2BS,CAAeT,GAEpC,MAAO,uJAIQE,0BACAC,kKAKgBA,wFAEMG,uDACDD,gLAIED,yEAIhC,IAEPI,KAAK,GACV,CC9BO,MAAME,EAAO,CAClBC,WAAYC,SAASC,cAAc,mBCD/BC,EAAU,mCAEVC,EAAU,gCACHC,EAAa,8BACbC,EAAgB,QAEtBC,iBACL,IACE,MAAMC,QAAuBC,MAC3B,GAAGL,+BAAqCD,KAEpCO,QAAeF,EAAeG,OAE9BC,QAAuBH,MAC3B,GAAGL,6BAAmCD,oBAIxC,MAAO,CAACO,QAFaE,EAAeD,OAQtC,CALE,MAAOE,GACPC,QAAQD,MAAM,QAASA,EAAME,QAE/B,CAGF,EChBA,GAAmBC,MAInB,SAA2BC,GACzB,MAAMC,QAAEA,GAAYD,EAAK,IACnB5B,OAAEA,GAAW4B,EAAK,IAM1B,SAAyBP,GACvB,MAAMS,EAAoBlC,EAAsByB,GAChDX,EAAKC,WAAWoB,UAAYD,CAC9B,CANEE,CASF,SAA0BH,EAASI,GACjC,OAAOJ,EAAQ/B,KACb,EAACoC,YAAEA,EAAWC,UAAEA,EAASC,aAAEA,EAAYC,MAAEA,EAAKpC,GAAEA,EAAEqC,aAAEA,MAClD,MAAMpC,EAASc,EAAaC,EAAgBiB,EACtClC,EAcZ,SAA2BuC,EAAUN,GACnC,MAAMO,EAAS,GAUf,OARAD,EAASE,MAAKC,IACZT,EAAUU,SAAQC,IACZA,EAAM3C,KAAOyC,GACfF,EAAOK,KAAKD,EAAMzC,KAAI,GAE1B,IAGKqC,CACT,CA1BqBM,CAAkBX,EAAWF,GAE5C,MAAO,CACL/B,OAAQA,EACRF,OAAQA,EACRI,OAAQgC,EAAaW,QAAQ,GAC7B5C,KAAMkC,EACNpC,GAAIA,EACJI,KAAM2C,OAAOC,SAASX,GACxB,GAGN,CA1BwBY,CAAiBrB,EAAS7B,GAElD,IAV2CmD,OAkD3C,WAGA,G","sources":["src/js/card-markup.js","src/js/refs.js","src/js/search-servise.js","src/index.js"],"sourcesContent":["export function createMarkupFilmsList(moviesData) {\n  return moviesData\n    .map(movie => {\n      const { genres, id, imgUrl, name, rating, year } = movie;\n      const genresToShow = trimGenresList(genres);\n\n      return `<li class=\"films__item\">\n        <a href=\"\" class=\"films__link\">\n          <div class=\"films__img-wrapper\">\n            <img\n              src=\"${imgUrl}\"\n              alt=\"${name}\"\n              class=\"films__img\" loading=\"lazy\"\n            />\n          </div>\n          <div class=\"films__info\">\n            <p class=\"films__name\">${name}</p>\n            <p class=\"films__desk\">\n              <span class=\"films__genre\">${genresToShow}</span> |\n              <span class=\"films__year\">${year}</span>\n            </p>\n            <p class=\"films__desk\">\n              <span class=\"films__rating--text\"> Rating: </span>\n              <span class=\"films__rating\">${rating}</span>\n            </p>\n          </div>\n        </a>\n      </li>`;\n    })\n    .join('');\n}\n\n//  function render to main page first 3 genres\nfunction trimGenresList(genres) {\n  if (genres.length <= 3) {\n    return genres.join(', ');\n  } else {\n    return `${genres[0]}, ${genres[1]}, Other`;\n  }\n}\n","export const refs = {\n  moviesList: document.querySelector('.js-films-list'),\n};\n","const API_KEY = 'd03712107dcdd723f1173c5ee2c0d8c1';\n\nconst baseUrl = `https://api.themoviedb.org/3/`;\nexport const baseImgUrl = `https://image.tmdb.org/t/p/`;\nexport const imgPosterSize = `w500`;\n\nexport async function fetchTrendMovies() {\n  try {\n    const responseMovies = await fetch(\n      `${baseUrl}trending/movie/day?api_key=${API_KEY}`\n    );\n    const movies = await responseMovies.json();\n\n    const responseGenres = await fetch(\n      `${baseUrl}genre/movie/list?api_key=${API_KEY}&language=en-US`\n    );\n    const genres = await responseGenres.json();\n\n    return [movies, genres]; // return in index.js two promises\n  } catch (error) {\n    console.error('Error', error.message);\n    // here should be Notify failure message\n  } finally {\n    // here should be spinner.close()\n  }\n}\n","import { createMarkupFilmsList } from './js/card-markup';\nimport { refs } from './js/refs';\nimport {\n  fetchTrendMovies,\n  baseImgUrl,\n  imgPosterSize,\n} from './js/search-servise';\n\n// ! main fetch\nfetchTrendMovies().then(handleTrendMovies).catch(handleError);\n\n// ! Set functions\n\nfunction handleTrendMovies(data) {\n  const { results } = data[0]; // get movies from first promise\n  const { genres } = data[1]; // get genres from second promise\n\n  const necessaryData = getNecessaryData(results, genres);\n  showTrendMovies(necessaryData);\n}\n\nfunction showTrendMovies(movies) {\n  const markupTrendMovies = createMarkupFilmsList(movies);\n  refs.moviesList.innerHTML = markupTrendMovies;\n}\n\n// function which handle respose data from API and return necessary data\nfunction getNecessaryData(results, allGenres) {\n  return results.map(\n    ({ poster_path, genre_ids, vote_average, title, id, release_date }) => {\n      const imgUrl = baseImgUrl + imgPosterSize + poster_path;\n      const genres = findCurrentGenres(genre_ids, allGenres);\n\n      return {\n        imgUrl: imgUrl,\n        genres: genres,\n        rating: vote_average.toFixed(1),\n        name: title,\n        id: id,\n        year: Number.parseInt(release_date),\n      };\n    }\n  );\n}\n\nfunction findCurrentGenres(genreIds, allGenres) {\n  const result = [];\n\n  genreIds.find(genreId => {\n    allGenres.forEach(genre => {\n      if (genre.id === genreId) {\n        result.push(genre.name);\n      }\n    });\n  });\n\n  return result;\n}\n\nfunction handleError() {\n  err => console.log(err);\n  // here should be Notify message\n}\n"],"names":["$300574f52826361b$export$e3b8c69c5bd487ae","moviesData","map","movie","genres","id","imgUrl","name","rating","year","genresToShow","length","join","$300574f52826361b$var$trimGenresList","$37e33676934ad046$export$21666b427502ea6d","moviesList","document","querySelector","$3f59e523d9128698$var$API_KEY","$3f59e523d9128698$var$baseUrl","$3f59e523d9128698$export$712e230773b06a6d","$3f59e523d9128698$export$60bd657266219e65","async","responseMovies","fetch","movies","json","responseGenres","error","console","message","then","data","results","markupTrendMovies","innerHTML","$b8f9b7833fa37166$var$showTrendMovies","allGenres","poster_path","genre_ids","vote_average","title","release_date","genreIds","result","find","genreId","forEach","genre","push","$b8f9b7833fa37166$var$findCurrentGenres","toFixed","Number","parseInt","$b8f9b7833fa37166$var$getNecessaryData","catch"],"version":3,"file":"index.d1603b48.js.map"}